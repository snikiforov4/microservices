version: '3.3'
services:
  mongo_db:
    image: mongo:${MONGO_IMAGE_VERSION}
    volumes:
      - mongo_db:/data/db
    networks:
      backend:
        aliases:
          - post_db
          - comment_db
          - mongodb_1
    deploy:
      placement:
        constraints:
          - node.labels.reliability == high

  ui:
    image: ${USER_NAME}/ui:${UI_IMAGE_VERSION}
    ports:
      - ${UI_PUBLISHED_PORT}:9292/tcp
    networks:
      - frontend
      - monitoring
    environment:
      - ENV=${ENV}
    deploy:
      mode: replicated
      replicas: 3
      placement:
        constraints:
          - node.role == worker
      restart_policy:
        condition: on-failure
        max_attempts: 3
        delay: 3s
      update_config:
        parallelism: 1
        delay: 5s
        failure_action: rollback
      resources:
        limits:
          cpus: '0.25'
          memory: 150M

  post:
    image: ${USER_NAME}/post:${POST_IMAGE_VERSION}
    networks:
      - frontend
      - backend
      - monitoring
    deploy:
      mode: replicated
      replicas: 3
      placement:
        constraints:
          - node.role == worker
      restart_policy:
        condition: on-failure
        max_attempts: 10
        delay: 1s
      update_config:
        parallelism: 2
        delay: 10s
        failure_action: rollback
      resources:
        limits:
          cpus: '0.3'
          memory: 300M

  comment:
    image: ${USER_NAME}/comment:${COMMENT_IMAGE_VERSION}
    networks:
      - frontend
      - backend
      - monitoring
    deploy:
      mode: replicated
      replicas: 3
      placement:
        constraints:
          - node.role == worker
      restart_policy:
        condition: on-failure
        max_attempts: 10
        delay: 1s
      update_config:
        parallelism: 2
        delay: 10s
        failure_action: rollback
      resources:
        limits:
          cpus: '0.3'
          memory: 300M
